/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3
#define ARROW_L 4
#define BT_L 5

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
	    tri_layer {
	      if-layers = <NAV_L NUM_L>;
	      then-layer = <SYM_L>;
	    };
    };


        keymap {
                compatible = "zmk,keymap";
                default_layer {
// --------------------------------------------------------------------------------------
//       | ESC  |  Q  |  W  |  E  |  R  |  T  |    |  Y  |  U   |  I  |  O  |  P  |  \   | 
//  | GUI| CTRL |  A  |  S  |  D  |  F  |  G  |    |  H  |  J   |  K  |  L  |  ;  |  '   |  GUI |
//       |LSHFT |  Z  |  X  |  C  |  V  |  B  |    |  N  |  M   |  ,  |  .  |  /  |  `   |
//                | ALT | SPC | LWR | SPC |    | LWR | BKSP | RSE | GUI |
// --------------------------------------------------------------------------------------
                        bindings = <
&kp LGUI &kp ESC   &kp Q   &kp W   &kp E   &kp R    &kp T    &kp Y   &kp U    &kp I       &kp O     &kp P      &kp BSLH  &kp RGUI
         &kp LCTRL &kp A   &kp S   &kp D   &kp F    &kp G    &kp H   &kp J    &kp K       &kp L     &kp SEMI   &kp QUOT
         &kp LSHFT &kp Z   &kp X   &kp C   &kp V    &kp B    &kp N   &kp M    &kp COMMA   &kp DOT   &kp FSLH   &bhm RSHIFT GRAVE
              &kp LALT   &lt NAV_L SPACE    &bhm LSHIFT SPACE     &lt NUM_L BKSP  &lt ARROW_L RET    &lt BT_L LGUI
                        >;
                };
   nav_layer {
            label = "Nav";
            bindings = <
// --------------------------------------------------------------------------------------
//   | ESC  |  F1 |  F2 |  F3 |  F4 |   |    |  { |  }   |     |     |     |      | 
//   | CTRL |  F5 |  F6 |  F7 |  F8 |   |    |  [ |  ]   |     |     |     |      |
//   |LSHFT |  F9 | F10 | F11 | F12 |   |    |  ( |  )   |     |     |     |      |
//                |     |     |     |   |    |    |      |     |     |
// --------------------------------------------------------------------------------------
&trans &trans   &kp F1 &kp F2  &kp F3  &kp F4  &trans &trans  &kp LBRC    &kp RBRC  &trans &trans &trans  &trans
&kp TAB  &kp F5 &kp F6  &kp F7  &kp F8  &trans &trans  &kp LBKT    &kp RBKT  &trans &trans &trans 
&trans   &kp F9 &kp F10 &kp F11 &kp F12 &trans &trans  &kp LS(N9)  &kp LS(N0)    &trans &trans &trans 
             &trans      &trans          &trans       &trans    &trans  &trans         
            >;
        };


        num_layer {
            label = "Num";
            bindings = <
// --------------------------------------------------------------------------------------
//   |    |  !  |  @  |  #  |  $  |  %  |    | ^  |  &   |  *  |  (  |  )  |  DEL | 
//   |    |  1  |  2  |  3  |  4  |  5  |    | 6  |  7   |  8  |  9  |  0  |  _   |
//   |    |     |     |     |     |     |    | -  |  =   |  +  |      |    |      |
// --------------------------------------------------------------------------------------
&trans &trans   &kp LS(N1)   &kp LS(N2) &kp LS(N3) &kp LS(N4)  &kp LS(N5) &kp LS(N6) &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0) &kp DEL     &trans
&trans   &kp N1       &kp N2     &kp N3     &kp N4      &kp N5     &kp N6     &kp N7      &kp N8      &kp N9      &kp N0     &kp UNDER
&trans   &trans       &trans     &trans     &trans      &trans     &kp MINUS  &kp EQUAL   &kp PLUS    &trans     &trans      &trans 
             &kp N0      &trans    &none         &none     &kp ESC        &kp DEL     
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&trans &trans     &kp LBRC   &kp LS(N7) &kp LS(N8)  &kp LS(N9)   &kp RBRC     &trans     &trans    &trans       &trans       &trans     &trans &trans
&trans     &kp COLON  &kp LS(N4) &kp LS(N5)  &kp LS(N6)   &kp PLUS     &trans     &trans    &trans       &trans       &trans     &trans
&trans     &kp TILDE  &kp LS(N1) &kp LS(N2)  &kp LS(N3)   &kp LS(BSLH) &trans     &trans    &trans       &trans       &trans     &trans
                  &kp LS(N0)      &trans          &trans       &trans    &trans  &trans         
            >;
        };

        arrow_layer {
            label = "Arrow";
            bindings = <
&trans &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp UP  &trans  &trans  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp HOME  &kp LEFT  &kp DOWN  &kp RIGHT  &kp END  &trans  
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  
                &trans      &trans          &trans       &trans    &trans  &trans         
            >;
        };


bt_layer {
            label = "Bt";
            bindings = <
&trans &bt BT_CLR  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp UP  &trans  &trans &bootloader   &trans
&trans  &trans  &trans  &trans  &trans  &trans   &trans  &trans &trans &trans &trans &trans
&trans  &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 2   &bt BT_SEL 4   &trans  &trans  &trans  &trans  &trans  &trans  
                &trans      &trans          &trans       &trans    &trans  &trans         
            >;
        };

        };
};
